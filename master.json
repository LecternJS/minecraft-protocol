{"meta":{"generator":"0.10.0","format":20,"date":1624603200078},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Welcome","path":"docs/general/welcome.md"}}},"examples":{"name":"Examples","files":{"ping":{"name":"Ping","type":"js","content":"","path":"docs/examples/ping.js"}}}},"classes":[{"name":"BaseClient","description":"The base packet client","extends":[[["EventEmitter"]]],"construct":{"name":"BaseClient","params":[{"name":"options","description":"options for the baseclient","type":[[["BaseClientOptions"]]]}]},"props":[{"name":"options","description":"The options the client was initiated with.","type":[[["BaseClientOptions"]]],"meta":{"line":41,"file":"BaseClient.js","path":"src/Client"}},{"name":"production","description":"Whether or not this process is in production or not.","type":[[["boolean"]]],"meta":{"line":54,"file":"BaseClient.js","path":"src/Client"}},{"name":"version","description":"The Minecraft Version of the server we are connecting to. Set to '1.16.4' by default, 'false' to auto-detect.","type":[[["string"]],[["boolean"]]],"meta":{"line":60,"file":"BaseClient.js","path":"src/Client"}},{"name":"destroyed","description":"If this client was destroyed. It will prevent the client from reconnecting.","type":[[["boolean"]]],"meta":{"line":70,"file":"BaseClient.js","path":"src/Client"}},{"name":"reconnecting","description":"If this manager is currently reconnecting one or multiple shards","access":"private","type":[[["boolean"]]],"meta":{"line":77,"file":"BaseClient.js","path":"src/Client"}},{"name":"splitter","description":"Splitter that will be used to read packets.","access":"private","type":[[["Splitter"]]],"meta":{"line":85,"file":"BaseClient.js","path":"src/Client"}},{"name":"framer","description":"Framer that will be used to rebuild packets.","access":"private","type":[[["Framer"]]],"meta":{"line":93,"file":"BaseClient.js","path":"src/Client"}},{"name":"compressor","description":"The compressor used deflate packets.","access":"private","type":[[["Compressor"]]],"meta":{"line":101,"file":"BaseClient.js","path":"src/Client"}},{"name":"decompressor","description":"The decompressor used to gunzip packets.","access":"private","type":[[["Decompressor"]]],"meta":{"line":109,"file":"BaseClient.js","path":"src/Client"}},{"name":"cipher","description":"The cipher used to encrypt packets to the server.","access":"private","type":[[["Cipher"]]],"meta":{"line":116,"file":"BaseClient.js","path":"src/Client"}},{"name":"decipher","description":"The decipher used to decript packets from the server.","access":"private","type":[[["Decipher"]]],"meta":{"line":123,"file":"BaseClient.js","path":"src/Client"}},{"name":"propertyState","description":"Current state of the protocol handler.","type":[[["boolean"]],[["string"]]],"meta":{"line":129,"file":"BaseClient.js","path":"src/Client"}},{"name":"serializer","description":"Packet serializer","access":"private","type":[[["Serializer"]]],"meta":{"line":136,"file":"BaseClient.js","path":"src/Client"}},{"name":"deserializer","description":"Packet deserializer","access":"private","type":[[["Deserializer"]]],"meta":{"line":143,"file":"BaseClient.js","path":"src/Client"}},{"name":"closeTimer","description":"The timer for detecting if we disconnected or lost connection with the remove server","access":"private","type":[[["boolean"]],[["function"]]],"meta":{"line":150,"file":"BaseClient.js","path":"src/Client"}},{"name":"state","description":"The state this bot is in with trying to connect to the remote host.","access":"private","type":[[["string"]]],"meta":{"line":157,"file":"BaseClient.js","path":"src/Client"}},{"name":"compressionThreshold","description":"Fetches the current compression threshold to be used with the compressor.","readonly":true,"type":[[["number"]],[["string"]]],"meta":{"line":199,"file":"BaseClient.js","path":"src/Client"}}],"methods":[{"name":"setCompressionThreshold","description":"Sets the threshold for compression based on data recieved from packets.","params":[{"name":"threshold","description":"The threshold from any packets recieved from the minecraft server.","type":[[["number"]]]}],"meta":{"line":212,"file":"BaseClient.js","path":"src/Client"}},{"name":"setSocket","description":"Sets and creates all of the events needed for the socket.","params":[{"name":"socket","description":"a nodejs net socket","type":[[["socket"]]]}],"meta":{"line":235,"file":"BaseClient.js","path":"src/Client"}},{"name":"setEncryption","description":"Used to create the cipher/decipher engine after yggdrasil server authentication.","params":[{"name":"secret","description":"a secret secret","type":[[["string"]]]}],"meta":{"line":271,"file":"BaseClient.js","path":"src/Client"}},{"name":"destroy","description":"Used to completely destroy the bot. Use end if you want to eventually reconnect.","meta":{"line":343,"file":"BaseClient.js","path":"src/Client"}},{"name":"end","description":"Used to end the current session. Use destroy() if you do not wish to reconnect.","params":[{"name":"reason","description":"Reason for ending the bot's current session.","type":[[["string"]]]}],"meta":{"line":354,"file":"BaseClient.js","path":"src/Client"}},{"name":"write","description":"Writes packet data to serializer if possible.","params":[{"name":"name","description":"Packet Name","type":[[["string"]]]},{"name":"params","description":"Parameters","type":[[["string"]],[["array"]]]}],"meta":{"line":369,"file":"BaseClient.js","path":"src/Client"}},{"name":"writeRaw","description":"Writes RAW Buffer Data to framer/compressor.","params":[{"name":"buffer","description":"Packet Buffer Data","type":[[["buffer"]]]}],"meta":{"line":380,"file":"BaseClient.js","path":"src/Client"}},{"name":"connect","description":"Connects to the host specified in BaseClientOptions.","returns":{"types":[[["socket"]]],"description":"socket A network socket for the server"},"meta":{"line":390,"file":"BaseClient.js","path":"src/Client"}}],"meta":{"line":26,"file":"BaseClient.js","path":"src/Client"}},{"name":"Client","description":"The client for handling everything like interacting with other clients. You should be extending this or intiizliaing with new. See {@tutorial GettingStarted} for more information.","extends":[[["BaseClient"]]],"construct":{"name":"Client","description":"Constructs this Client.","params":[{"name":"options","description":"The object configuration to pass to this client.","optional":true,"default":"{}","type":[[["ClientOptions"]]]}]},"props":[{"name":"options","description":"The options the client was initialized with.","type":[[["ClientOptions"]]],"meta":{"line":45,"file":"Client.js","path":"src/Client"}},{"name":"baseDirectory","description":"The directory where all tokens and other files will be cached.","type":[[["string"]]],"meta":{"line":57,"file":"Client.js","path":"src/Client"}},{"name":"letsPlay","description":"Handles when the client is ready and has successfully joined the server.","type":[[["LetsPlay"]]],"meta":{"line":59,"file":"Client.js","path":"src/Client"}},{"name":"keepAlive","description":"The keep alive handler.","type":[[["KeepAlive"]]],"meta":{"line":66,"file":"Client.js","path":"src/Client"}},{"name":"pluginChannels","description":"Introduces plugin channels to the client.","type":[[["PluginChannels"]]],"meta":{"line":77,"file":"Client.js","path":"src/Client"}},{"name":"production","description":"Whether or not this process is in production or not.","type":[[["boolean"]]],"meta":{"line":54,"file":"BaseClient.js","path":"src/Client"}},{"name":"version","description":"The Minecraft Version of the server we are connecting to. Set to '1.16.4' by default, 'false' to auto-detect.","type":[[["string"]],[["boolean"]]],"meta":{"line":60,"file":"BaseClient.js","path":"src/Client"}},{"name":"destroyed","description":"If this client was destroyed. It will prevent the client from reconnecting.","type":[[["boolean"]]],"meta":{"line":70,"file":"BaseClient.js","path":"src/Client"}},{"name":"reconnecting","description":"If this manager is currently reconnecting one or multiple shards","access":"private","type":[[["boolean"]]],"meta":{"line":77,"file":"BaseClient.js","path":"src/Client"}},{"name":"splitter","description":"Splitter that will be used to read packets.","access":"private","type":[[["Splitter"]]],"meta":{"line":85,"file":"BaseClient.js","path":"src/Client"}},{"name":"framer","description":"Framer that will be used to rebuild packets.","access":"private","type":[[["Framer"]]],"meta":{"line":93,"file":"BaseClient.js","path":"src/Client"}},{"name":"compressor","description":"The compressor used deflate packets.","access":"private","type":[[["Compressor"]]],"meta":{"line":101,"file":"BaseClient.js","path":"src/Client"}},{"name":"decompressor","description":"The decompressor used to gunzip packets.","access":"private","type":[[["Decompressor"]]],"meta":{"line":109,"file":"BaseClient.js","path":"src/Client"}},{"name":"cipher","description":"The cipher used to encrypt packets to the server.","access":"private","type":[[["Cipher"]]],"meta":{"line":116,"file":"BaseClient.js","path":"src/Client"}},{"name":"decipher","description":"The decipher used to decript packets from the server.","access":"private","type":[[["Decipher"]]],"meta":{"line":123,"file":"BaseClient.js","path":"src/Client"}},{"name":"propertyState","description":"Current state of the protocol handler.","type":[[["boolean"]],[["string"]]],"meta":{"line":129,"file":"BaseClient.js","path":"src/Client"}},{"name":"serializer","description":"Packet serializer","access":"private","type":[[["Serializer"]]],"meta":{"line":136,"file":"BaseClient.js","path":"src/Client"}},{"name":"deserializer","description":"Packet deserializer","access":"private","type":[[["Deserializer"]]],"meta":{"line":143,"file":"BaseClient.js","path":"src/Client"}},{"name":"closeTimer","description":"The timer for detecting if we disconnected or lost connection with the remove server","access":"private","type":[[["boolean"]],[["function"]]],"meta":{"line":150,"file":"BaseClient.js","path":"src/Client"}},{"name":"state","description":"The state this bot is in with trying to connect to the remote host.","access":"private","type":[[["string"]]],"meta":{"line":157,"file":"BaseClient.js","path":"src/Client"}},{"name":"compressionThreshold","description":"Fetches the current compression threshold to be used with the compressor.","readonly":true,"type":[[["number"]],[["string"]]],"meta":{"line":199,"file":"BaseClient.js","path":"src/Client"}}],"methods":[{"name":"login","description":"The entry function to connect your bot to your specific server.","async":true,"returns":{"types":[[["Promise","<"],["string",">"]]],"description":"Username of the account used."},"meta":{"line":103,"file":"Client.js","path":"src/Client"}},{"name":"setCompressionThreshold","description":"Sets the threshold for compression based on data recieved from packets.","inherits":"BaseClient#setCompressionThreshold","inherited":true,"params":[{"name":"threshold","description":"The threshold from any packets recieved from the minecraft server.","type":[[["number"]]]}],"meta":{"line":212,"file":"BaseClient.js","path":"src/Client"}},{"name":"setSocket","description":"Sets and creates all of the events needed for the socket.","inherits":"BaseClient#setSocket","inherited":true,"params":[{"name":"socket","description":"a nodejs net socket","type":[[["socket"]]]}],"meta":{"line":235,"file":"BaseClient.js","path":"src/Client"}},{"name":"setEncryption","description":"Used to create the cipher/decipher engine after yggdrasil server authentication.","inherits":"BaseClient#setEncryption","inherited":true,"params":[{"name":"secret","description":"a secret secret","type":[[["string"]]]}],"meta":{"line":271,"file":"BaseClient.js","path":"src/Client"}},{"name":"destroy","description":"Used to completely destroy the bot. Use end if you want to eventually reconnect.","inherits":"BaseClient#destroy","inherited":true,"meta":{"line":343,"file":"BaseClient.js","path":"src/Client"}},{"name":"end","description":"Used to end the current session. Use destroy() if you do not wish to reconnect.","inherits":"BaseClient#end","inherited":true,"params":[{"name":"reason","description":"Reason for ending the bot's current session.","type":[[["string"]]]}],"meta":{"line":354,"file":"BaseClient.js","path":"src/Client"}},{"name":"write","description":"Writes packet data to serializer if possible.","inherits":"BaseClient#write","inherited":true,"params":[{"name":"name","description":"Packet Name","type":[[["string"]]]},{"name":"params","description":"Parameters","type":[[["string"]],[["array"]]]}],"meta":{"line":369,"file":"BaseClient.js","path":"src/Client"}},{"name":"writeRaw","description":"Writes RAW Buffer Data to framer/compressor.","inherits":"BaseClient#writeRaw","inherited":true,"params":[{"name":"buffer","description":"Packet Buffer Data","type":[[["buffer"]]]}],"meta":{"line":380,"file":"BaseClient.js","path":"src/Client"}},{"name":"connect","description":"Connects to the host specified in BaseClientOptions.","inherits":"BaseClient#connect","inherited":true,"returns":{"types":[[["socket"]]],"description":"socket A network socket for the server"},"meta":{"line":390,"file":"BaseClient.js","path":"src/Client"}}],"events":[{"name":"session","description":"Emitted when a minecraft session has been established.","params":[{"type":[[["string"]]]}],"meta":{"line":134,"file":"Client.js","path":"src/Client"}},{"name":"success","description":"Emited when a client has successfully joined a server.","meta":{"line":141,"file":"Client.js","path":"src/Client"}}],"meta":{"line":22,"file":"Client.js","path":"src/Client"}},{"name":"KeepAlive","description":"Handles continueous connections to the remote server to keep the connection alive.","construct":{"name":"KeepAlive","params":[{"name":"client","description":"The client that this will do packets for.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client this was created with.","type":[[["Client"]]],"meta":{"line":10,"file":"KeepAlive.js","path":"src/Client"}},{"name":"enabled","description":"Whether or not this class is enabled or not.","type":[[["Boolean"]]],"meta":{"line":18,"file":"KeepAlive.js","path":"src/Client"}},{"name":"timeout","description":"The timeout function for keepalive.","type":[[["function"]]],"meta":{"line":26,"file":"KeepAlive.js","path":"src/Client"}}],"methods":[{"name":"keepalive","description":"The handler for registering and writing the keep alive packet.","params":[{"name":"packet","description":"Keep Alive Packet","type":[[["buffer"]]]}],"meta":{"line":43,"file":"KeepAlive.js","path":"src/Client"}}],"meta":{"line":4,"file":"KeepAlive.js","path":"src/Client"}},{"name":"MicrosoftAuthFlow","description":"Handles authenticating with the microsoft endpoint as well as caching for later.","construct":{"name":"MicrosoftAuthFlow","params":[{"name":"username","description":"The email associated to the minecraft account.","type":[[["string"]]]},{"name":"cacheDirectory","description":"The directory where we should hold these files.","type":[[["Array","<"],["string",">"]]]},{"name":"codeCallback","description":"The function to return to when code has been recieved.","type":[[["function"]]]}]},"methods":[{"name":"authenticatePassword","description":"Authenticates with Mincrosoft through user credentials, then\nwith Xbox Live, Minecraft, checks entitlements and returns profile","scope":"static","params":[{"name":"client","description":"The client passed to protocol","type":[[["Object"]]]},{"name":"options","description":"Client Options","type":[[["Object"]]]}],"async":true,"meta":{"line":131,"file":"MicrosoftAuthentication.js","path":"src/Client"}},{"name":"authenticateDeviceToken","description":"Authenticates to Minecraft via device code based Microsoft auth,\nthen connects to the specified server in Client Options","scope":"static","params":[{"name":"client","description":"The client passed to protocol","type":[[["Object"]]]},{"name":"options","description":"Client Options","type":[[["Object"]]]}],"async":true,"meta":{"line":171,"file":"MicrosoftAuthentication.js","path":"src/Client"}}],"meta":{"line":19,"file":"MicrosoftAuthentication.js","path":"src/Client"}},{"name":"Server","description":"Constucts a basic minecraft protocol server.","construct":{"name":"Server","params":[{"name":"version","description":"The minecraft server version","type":[[["string"]]]},{"name":"customPackets","description":"Any custom packets this server might need to handle.","type":[[["object"]]]},{"name":"hideErrors","description":"Should we hide errors?","type":[[["boolean"]]]}]},"props":[{"name":"version","description":"The minecraft version of this minecraft server.","type":[[["string"]],[["object"]]],"meta":{"line":29,"file":"BaseServer.js","path":"src/Server"}},{"name":"socketServer","description":"The net socket server created and listening.","access":"private","type":[[["Socket"]]],"meta":{"line":37,"file":"BaseServer.js","path":"src/Server"}},{"name":"clients","description":"A object of all clients connected to the server.","access":"private","type":[[["Object","<"],["Object",">"]]],"meta":{"line":45,"file":"BaseServer.js","path":"src/Server"}},{"name":"customPackets","description":"Object of all custom packets we should parse.","type":[[["Object","<"],["Object",">"]]],"meta":{"line":52,"file":"BaseServer.js","path":"src/Server"}},{"name":"hideErrors","description":"Should we ignore errors?","type":[[["boolean"]]],"meta":{"line":59,"file":"BaseServer.js","path":"src/Server"}},{"name":"serializer","description":"Packet seriaizer","access":"private","type":[[["Serializer"]]],"meta":{"line":67,"file":"BaseServer.js","path":"src/Server"}},{"name":"options","description":"The options the client was initialized with.","type":[[["ServerOptions"]]],"meta":{"line":18,"file":"Server.js","path":"src/Server"}},{"name":"serverKey","description":"The server key for this minecraft server. Required for authentication.","type":[[["NodeRSA"]]],"meta":{"line":25,"file":"Server.js","path":"src/Server"}},{"name":"playerCount","description":"The player count of this server.","type":[[["number"]]],"meta":{"line":33,"file":"Server.js","path":"src/Server"}},{"name":"maxPlayers","description":"The maximum amount of players for this server.","type":[[["number"]]],"meta":{"line":42,"file":"Server.js","path":"src/Server"}},{"name":"onlineModeExceptions","description":"A list of players excluded from being verified for online mode.","type":[[["object"]]],"meta":{"line":51,"file":"Server.js","path":"src/Server"}},{"name":"favicon","description":"A buffer repesenting the favicon of the server.","type":[[["buffer"]],[["null"]]],"meta":{"line":60,"file":"Server.js","path":"src/Server"}}],"methods":[{"name":"listen","description":"Creates a net socker server and listens on the port/host you specify.","params":[{"name":"port","description":"The port on the system to listen to.","optional":true,"default":25565,"type":[[["number"]]]},{"name":"host","description":"The ip on the system to listen to. If unavailable you will recieve a socket error.","optional":true,"default":"0.0.0.0","type":[[["string"]]]}],"meta":{"line":76,"file":"BaseServer.js","path":"src/Server"}},{"name":"close","description":"Equivalent of running /stop on a Java Minecraft Server.","returns":[[["null"]]],"meta":{"line":116,"file":"BaseServer.js","path":"src/Server"}},{"name":"writeToClients","description":"Broadcasts packets to all clients.","params":[{"name":"clients","description":"An array of clients.","type":[[["Array","<"],["Object",">"]]]},{"name":"name","description":"The name of the packet.","type":[[["string"]]]},{"name":"params","description":"The data of the packet.","type":[["*"]]}],"meta":{"line":130,"file":"BaseServer.js","path":"src/Server"}},{"name":"listen","description":"Listens to the specified port/host on your server.","scope":"static","params":[{"name":"port","description":"The port to listen to.","type":[[["number"]]]},{"name":"host","description":"the host to listen on.","type":[["*"]]}],"meta":{"line":74,"file":"Server.js","path":"src/Server"}}],"meta":{"line":19,"file":"BaseServer.js","path":"src/Server"}},{"name":"Framer","description":"Manages the framing of packets.","extends":[[["Transform"]]],"meta":{"line":10,"file":"Framer.js","path":"src/Util"}},{"name":"Util","description":"Contains various general-purpose utility methods. These functions are also available on the base object.","methods":[{"name":"isObject","description":"Verify if the input is an object.","scope":"static","params":[{"name":"input","description":"The object to verify.","type":[[["Object"]]]}],"returns":[[["boolean"]]],"meta":{"line":23,"file":"Util.js","path":"src/Util"}},{"name":"mergeDefault","description":"Sets default properties on an object that aren't already specified.","scope":"static","params":[{"name":"def","description":"Default properties.","type":[[["Object"]]]},{"name":"given","description":"Object to assign defaults to.","type":[[["Object"]]]}],"returns":[[["Object"]]],"meta":{"line":34,"file":"Util.js","path":"src/Util"}},{"name":"deepClone","description":"Deep clone.","scope":"static","params":[{"name":"source","description":"The object to clone.","type":[["*"]]}],"returns":[["*"]],"meta":{"line":49,"file":"Util.js","path":"src/Util"}},{"name":"bufferEquals","description":"Check to see if two buffers are exactly equal to each other.","scope":"static","params":[{"name":"bufferA","description":"A buffer.","type":[[["buffer"]]]},{"name":"bufferB","description":"A buffer.","type":[[["buffer"]]]}],"returns":[[["undefined"]],[["boolean"]]],"meta":{"line":141,"file":"Util.js","path":"src/Util"}}],"meta":{"line":11,"file":"Util.js","path":"src/Util"}}],"interfaces":[],"typedefs":[{"name":"ClientOptions","type":[[["BaseClientOptions"]]],"props":[{"name":"host","description":"A hostname or ip pointing to the server you wish to join.","optional":true,"default":"'localhost'","type":[[["string"]]]},{"name":"port","description":"The port of the server you wish to connect to.","optional":true,"default":25565,"type":[[["number"]]]},{"name":"production","description":"Whether this server is in production (changes the way this handles errors.)","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"version","description":"Whether to specify a specific version to connect with. False = Auto.","optional":true,"default":false,"type":[[["version"]]]},{"name":"customPackets","description":"Custom packets to include.","optional":true,"default":"{}","type":[[["object"]]]},{"name":"offlineMode","description":"Whether or not we are connecting to an offline server. If true, no need for password.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"keepAlive","description":"Whether or not to setup and run the keepAlive ping to the server.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"userAgent","description":"The user agent to pass to Microsoft/Mojang API.","optional":true,"default":"'Minecraft'","type":[[["string"]]]},{"name":"sessionServer","description":"What session server to use when authenticating when attempting to join.","optional":true,"default":"'https://sessionserver.mojang.com'","type":[[["string"]]]}],"meta":{"line":24,"file":"Client.js","path":"src/Client"}}],"externals":[]}